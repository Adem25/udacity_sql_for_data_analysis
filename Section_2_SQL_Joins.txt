Section 2: SQL Joins
Last Check

1 Provide a table that provides the region for each sales_rep along with their associated accounts. 
This time only for the Midwest region. Your final table should include three columns: the region name, the sales rep name, and the account name. 
Sort the accounts alphabetically (A-Z) according to account name.

SELECT r.name AS RegionName, s.name AS SalesRepName, a.name AS Accountname
FROM region r
JOIN sales_reps s
 ON r.id = s.region_id
JOIN accounts a
 ON a.sales_rep_id = s.id
WHERE r.name = 'Midwest'
ORDER BY a.name 

2 Provide a table that provides the region for each sales_rep along with their associated accounts. 
This time only for accounts where the sales rep has a first name starting with S and in the Midwest region. 
Your final table should include three columns: the region name, the sales rep name, and the account name. 
Sort the accounts alphabetically (A-Z) according to account name.

SELECT r.name AS RegionName, s.name AS SalesRepName, a.name AS Accountname
FROM region r
JOIN sales_reps s
 ON r.id = s.region_id
JOIN accounts a
 ON a.sales_rep_id = s.id
WHERE r.name = 'Midwest' AND s.name LIKE 'S%'
ORDER BY a.name 

3 Provide a table that provides the region for each sales_rep along with their associated accounts. 
This time only for accounts where the sales rep has a last name starting with K and in the Midwest region. 
Your final table should include three columns: the region name, the sales rep name, and the account name. 
Sort the accounts alphabetically (A-Z) according to account name.

SELECT r.name AS RegionName, s.name AS SalesRepName, a.name AS Accountname
FROM region r
JOIN sales_reps s
 ON r.id = s.region_id
JOIN accounts a
 ON a.sales_rep_id = s.id
WHERE r.name = 'Midwest' AND s.name LIKE '% K%'
ORDER BY a.name 

4 Provide the name for each region for every order, as well as the account name and the unit price they paid (total_amt_usd/total) for the order. 
However, you should only provide the results if the standard order quantity exceeds 100. 
Your final table should have 3 columns: region name, account name, and unit price

SELECT r.name AS RegionName, a.name AS Accountname, o.standard_qty, o.total_amt_usd/(o.total+0.01) AS Unitprice
FROM region r
JOIN sales_reps s
 ON r.id = s.region_id
JOIN accounts a
 ON a.sales_rep_id = s.id
JOIN orders o
 ON a.id = o.account_id
WHERE o.standard_qty > 100

5 Provide the name for each region for every order, as well as the account name and the unit price they paid (total_amt_usd/total) for the order. 
However, you should only provide the results if the standard order quantity exceeds 100 and the poster order quantity exceeds 50. 
Your final table should have 3 columns: region name, account name, and unit price. Sort for the smallest unit price first.

SELECT r.name AS RegionName, a.name AS Accountname, o.standard_qty, o.poster_qty, o.total_amt_usd/(o.total+0.01) AS Unitprice
FROM region r
JOIN sales_reps s
 ON r.id = s.region_id
JOIN accounts a
 ON a.sales_rep_id = s.id
JOIN orders o
 ON a.id = o.account_id
WHERE o.standard_qty > 100 AND o.poster_qty > 50
ORDER BY Unitprice;

6 Provide the name for each region for every order, as well as the account name and the unit price they paid (total_amt_usd/total) for the order. 
However, you should only provide the results if the standard order quantity exceeds 100 and the poster order quantity exceeds 50. 
Your final table should have 3 columns: region name, account name, and unit price. Sort for the largest unit price first.

SELECT r.name AS RegionName, a.name AS Accountname, o.standard_qty, o.poster_qty, o.total_amt_usd/(o.total+0.01) AS Unitprice
FROM region r
JOIN sales_reps s
 ON r.id = s.region_id
JOIN accounts a
 ON a.sales_rep_id = s.id
JOIN orders o
 ON a.id = o.account_id
WHERE o.standard_qty > 100 AND o.poster_qty > 50
ORDER BY Unitprice DESC

7 What are the different channels used by account id 1001? Your final table should have only 2 columns: account name and the different channels. 
You can try SELECT DISTINCT to narrow down the results to only the unique values.

SELECT DISTINCT a.name AS Accountname, w.channel
FROM region r
JOIN sales_reps s
 ON r.id = s.region_id
JOIN accounts a
 ON a.sales_rep_id = s.id
JOIN orders o
 ON a.id = o.account_id
JOIN web_events w
 ON a.id = w.account_id
WHERE a.id = 1001

8 Find all the orders that occurred in 2015. Your final table should have 4 columns: occurred_at, account name, order total, and order total_amt_usd.

SELECT o.occurred_at, a.name, o.total, o.total_amt_usd
FROM region r
JOIN sales_reps s
 ON r.id = s.region_id
JOIN accounts a
 ON a.sales_rep_id = s.id
JOIN orders o
 ON a.id = o.account_id
JOIN web_events w
 ON a.id = w.account_id
WHERE o.occurred_at BETWEEN to_timestamp('01-01-2015 00:00:00', 'dd-mm-yyyy hh24:mi:ss') AND to_timestamp('31-12-2015 23:59:59', 'dd-mm-yyyy hh24:mi:ss')